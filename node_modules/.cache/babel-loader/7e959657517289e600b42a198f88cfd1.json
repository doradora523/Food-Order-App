{"ast":null,"code":"var _jsxFileName = \"/Users/a123/Documents/dev/REACT/FoodOrderApp/01-starting-project/src/components/Layout/HeaderCartButton.jsx\",\n  _s = $RefreshSig$();\nimport React, { useContext, useEffect, useState } from \"react\";\nimport classes from \"./HeaderCartButton.module.css\";\nimport CartIcon from \"../Cart/CartIcon\";\nimport CartContext from \"../../store/cart-context\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst HeaderCartButton = props => {\n  _s();\n  const [btnIsHighlighted, setBtnIsHighlighted] = useState(false);\n  const cartCtx = useContext(CartContext);\n  const {\n    items\n  } = cartCtx;\n  const numberOfCartItems = items.reduce((curNumber, item) => {\n    return curNumber + item.amount;\n  }, 0);\n  // CartItems 배연 안에는 우리가 저장한 모든 유형의 음식에 대한 배열이 있는데 그 유형의 음식의 개수는 장바구니에 포함되기 때문에 length를 사용하면 안됨.\n  // 따라서 항목 수를 가져오는 적절한 방법은 CartItems에 접근하는 것!\n  // reduce()는 내장 메소드이며, 데이터 배열을 값 하나로 변환해주는 메소드다.\n\n  const btnClasses = `${classes.button} ${btnIsHighlighted ? classes.bump : \"\"}`;\n  useEffect(() => {\n    if (items.length === 0) {\n      return;\n    }\n    setBtnIsHighlighted(true);\n    setTimeout(() => {}, 300);\n  }, [items]);\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    className: btnClasses,\n    onClick: props.onClick,\n    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n      className: classes.icon,\n      children: /*#__PURE__*/_jsxDEV(CartIcon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      children: \"Your Cart\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      className: classes.badge,\n      children: numberOfCartItems\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n};\n_s(HeaderCartButton, \"mY+PPfE43aeTZpe9F3TN9SbH6iI=\");\n_c = HeaderCartButton;\nexport default HeaderCartButton;\nvar _c;\n$RefreshReg$(_c, \"HeaderCartButton\");","map":{"version":3,"names":["React","useContext","useEffect","useState","classes","CartIcon","CartContext","HeaderCartButton","props","btnIsHighlighted","setBtnIsHighlighted","cartCtx","items","numberOfCartItems","reduce","curNumber","item","amount","btnClasses","button","bump","length","setTimeout","onClick","icon","badge"],"sources":["/Users/a123/Documents/dev/REACT/FoodOrderApp/01-starting-project/src/components/Layout/HeaderCartButton.jsx"],"sourcesContent":["import React, { useContext, useEffect, useState } from \"react\";\nimport classes from \"./HeaderCartButton.module.css\";\nimport CartIcon from \"../Cart/CartIcon\";\nimport CartContext from \"../../store/cart-context\";\n\nconst HeaderCartButton = (props) => {\n  const [btnIsHighlighted, setBtnIsHighlighted] = useState(false);\n  const cartCtx = useContext(CartContext);\n  const { items } = cartCtx;\n\n  const numberOfCartItems = items.reduce((curNumber, item) => {\n    return curNumber + item.amount;\n  }, 0);\n  // CartItems 배연 안에는 우리가 저장한 모든 유형의 음식에 대한 배열이 있는데 그 유형의 음식의 개수는 장바구니에 포함되기 때문에 length를 사용하면 안됨.\n  // 따라서 항목 수를 가져오는 적절한 방법은 CartItems에 접근하는 것!\n  // reduce()는 내장 메소드이며, 데이터 배열을 값 하나로 변환해주는 메소드다.\n\n  const btnClasses = `${classes.button} ${\n    btnIsHighlighted ? classes.bump : \"\"\n  }`;\n\n  useEffect(() => {\n    if (items.length === 0) {\n      return;\n    }\n    setBtnIsHighlighted(true);\n\n    setTimeout(() => {}, 300)\n  }, [items]);\n\n  return (\n    <button className={btnClasses} onClick={props.onClick}>\n      <span className={classes.icon}>\n        <CartIcon />\n      </span>\n      <span>Your Cart</span>\n      <span className={classes.badge}>{numberOfCartItems}</span>\n    </button>\n  );\n};\n\nexport default HeaderCartButton;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,UAAU,EAAEC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC9D,OAAOC,OAAO,MAAM,+BAA+B;AACnD,OAAOC,QAAQ,MAAM,kBAAkB;AACvC,OAAOC,WAAW,MAAM,0BAA0B;AAAC;AAEnD,MAAMC,gBAAgB,GAAIC,KAAK,IAAK;EAAA;EAClC,MAAM,CAACC,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGP,QAAQ,CAAC,KAAK,CAAC;EAC/D,MAAMQ,OAAO,GAAGV,UAAU,CAACK,WAAW,CAAC;EACvC,MAAM;IAAEM;EAAM,CAAC,GAAGD,OAAO;EAEzB,MAAME,iBAAiB,GAAGD,KAAK,CAACE,MAAM,CAAC,CAACC,SAAS,EAAEC,IAAI,KAAK;IAC1D,OAAOD,SAAS,GAAGC,IAAI,CAACC,MAAM;EAChC,CAAC,EAAE,CAAC,CAAC;EACL;EACA;EACA;;EAEA,MAAMC,UAAU,GAAI,GAAEd,OAAO,CAACe,MAAO,IACnCV,gBAAgB,GAAGL,OAAO,CAACgB,IAAI,GAAG,EACnC,EAAC;EAEFlB,SAAS,CAAC,MAAM;IACd,IAAIU,KAAK,CAACS,MAAM,KAAK,CAAC,EAAE;MACtB;IACF;IACAX,mBAAmB,CAAC,IAAI,CAAC;IAEzBY,UAAU,CAAC,MAAM,CAAC,CAAC,EAAE,GAAG,CAAC;EAC3B,CAAC,EAAE,CAACV,KAAK,CAAC,CAAC;EAEX,oBACE;IAAQ,SAAS,EAAEM,UAAW;IAAC,OAAO,EAAEV,KAAK,CAACe,OAAQ;IAAA,wBACpD;MAAM,SAAS,EAAEnB,OAAO,CAACoB,IAAK;MAAA,uBAC5B,QAAC,QAAQ;QAAA;QAAA;QAAA;MAAA;IAAG;MAAA;MAAA;MAAA;IAAA,QACP,eACP;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAsB,eACtB;MAAM,SAAS,EAAEpB,OAAO,CAACqB,KAAM;MAAA,UAAEZ;IAAiB;MAAA;MAAA;MAAA;IAAA,QAAQ;EAAA;IAAA;IAAA;IAAA;EAAA,QACnD;AAEb,CAAC;AAAC,GAlCIN,gBAAgB;AAAA,KAAhBA,gBAAgB;AAoCtB,eAAeA,gBAAgB;AAAC;AAAA"},"metadata":{},"sourceType":"module"}